/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface;

import Business_logic.Car;
import Business_logic.CarRentalSystem;
import Business_logic.Status;
import Business_logic.Rental;
import Business_logic.ReturnedCarTableModel;
import Business_logic.RentedCarTableModel;
import Business_logic.Customer;
import Business_logic.FindCarTableModel;
import static java.awt.image.ImageObserver.ERROR;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.HashSet;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.RowFilter;
import javax.swing.event.ListSelectionEvent;
import javax.swing.table.TableModel;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.TableRowSorter;
import java.util.stream.Collectors;
import javax.swing.table.AbstractTableModel;
import java.util.*;

/**
 *
 * @author Shazam
 */
public class CarRentalFrame extends javax.swing.JFrame {

    private Customer customer;
    private FindCarTableModel findCarTableModel;
    private TableRowSorter<FindCarTableModel> findCarTableRowSorter;
    private RentedCarTableModel rentedCarTableModel;
    private TableRowSorter<RentedCarTableModel> rentedCarTableRowSorter;
    private ReturnedCarTableModel returnedCarTableModel;
    private CarRentalSystem system;

    /**
     * Creates new form CarRentalFrame
     */
    public CarRentalFrame(Customer customer, int selectedIndex, CarRentalSystem system) {

        this.findCarTableModel = new FindCarTableModel(new ArrayList<>());
        this.rentedCarTableModel = new RentedCarTableModel(new ArrayList<>(), customer);
        this.returnedCarTableModel = new ReturnedCarTableModel(new ArrayList<>(), customer);
        this.customer = customer;
        this.system = system;

        initComponents();

        this.jLabel1.setText(customer.getName());
        this.RentalStatusTab.setSelectedIndex(selectedIndex);

        initFindCarTable();
        initRentedCarTable();
        initReturnedCarTable();

    }

    public void initReturnedCarTable() {
        for (Rental rental : customer.getRentalList()) {
            if (rental.getStatus().equals(Status.returned)) {
                returnedCarTableModel.addRental(rental);
            }
        }
    }

    public void initRentedCarTable() {
        rentedCarTableRowSorter = new TableRowSorter<>(rentedCarTableModel);

        for (Rental rental : customer.getRentalList()) {
            if (rental.getStatus().equals(Status.rented)) {
                rentedCarTableModel.addRental(rental);
            }
        }

        RentedCarTable.setRowSorter(rentedCarTableRowSorter);

        RentedCarTable.getSelectionModel().addListSelectionListener(new CarsTableSelectionListener(rentedCarTableModel));

    }

    public void initFindCarTable() {
        findCarTableRowSorter = new TableRowSorter<>(findCarTableModel);
        // Find table stores all the available cars in the system
        for (Car car : system.getCarList()) {
            if (car.isAvailable()) {
                findCarTableModel.addCar(car);
            }
        }

        // Attach the row sorter
        FindCarTable.setRowSorter(findCarTableRowSorter);

        // Add the selection model to enable selecting the rows by clicking 
        // anywhere in the rows of the table.
        FindCarTable.getSelectionModel().addListSelectionListener(new CarsTableSelectionListener(findCarTableModel));
    }

    private class CarsTableSelectionListener implements ListSelectionListener {

        private AbstractTableModel model;

        public CarsTableSelectionListener(AbstractTableModel model) {
            this.model = model;
        }

        @Override
        public void valueChanged(ListSelectionEvent e) {
            ListSelectionModel lsm = (ListSelectionModel) e.getSource();

            for (int i = 0; i < model.getRowCount(); ++i) {
                if (lsm.isSelectedIndex(i)) {
                    model.setValueAt(true, i, 0);
                } else {
                    model.setValueAt(false, i, 0);
                }

            }
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        RentalStatusTab = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        FindCarSearch = new javax.swing.JTextField();
        SearchCar = new javax.swing.JButton();
        RentCarButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        FindCarTable = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        RentedCarTable = new javax.swing.JTable();
        ReturnCarButton = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        ReturnedCarTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        SearchCar.setText("Search");
        SearchCar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchCarActionPerformed(evt);
            }
        });

        RentCarButton.setText("Rent Car");
        RentCarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RentCarButtonActionPerformed(evt);
            }
        });

        FindCarTable.setModel(findCarTableModel);
        jScrollPane1.setViewportView(FindCarTable);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(FindCarSearch)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(SearchCar)
                        .addGap(22, 22, 22))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(RentCarButton)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 454, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 12, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(FindCarSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SearchCar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(RentCarButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(13, Short.MAX_VALUE))
        );

        RentalStatusTab.addTab("Find Car", jPanel1);

        RentedCarTable.setModel(rentedCarTableModel);
        jScrollPane2.setViewportView(RentedCarTable);

        ReturnCarButton.setText("Return Selected");
        ReturnCarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ReturnCarButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 454, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(ReturnCarButton)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(ReturnCarButton)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(107, 107, 107))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        RentalStatusTab.addTab("Rented Cars", jPanel2);

        ReturnedCarTable.setModel(returnedCarTableModel);
        jScrollPane3.setViewportView(ReturnedCarTable);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 472, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        RentalStatusTab.addTab("Returned Cars", jPanel3);

        jLabel1.setText("jLabel1");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(RentalStatusTab)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(RentalStatusTab, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SearchCarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchCarActionPerformed
        // TODO add your handling code here:
        RowFilter<TableModel, Object> rf = RowFilter.regexFilter("(?i).*" + FindCarSearch.getText() + ".*", 0, 1, 2);
        findCarTableRowSorter.setRowFilter(rf);
        FindCarTable.clearSelection();
    }//GEN-LAST:event_SearchCarActionPerformed

    private void RentCarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RentCarButtonActionPerformed
        // TODO add your handling code here:
        if (FindCarTable.getSelectedRowCount() == 0) {
            JOptionPane.showMessageDialog(this, "You have not selected any rows. Please select some rows.");
            return;
        }

        while (true) {
            String rentDate = JOptionPane.showInputDialog(this, "Enter rent date (dd/mm/yy):");

            if (rentDate == null) {
                return;
            }

            SimpleDateFormat format = new SimpleDateFormat("dd/mm/yy");
            try {
                Date d = format.parse(rentDate);
                if (!rentDate.equals(format.format(d))) {
                    throw new ParseException(rentDate, ERROR);

                }
                Calendar cal = format.getCalendar();

                findCarTableModel.rentCars(rentedCarTableModel, rentDate, customer);
                JOptionPane.showMessageDialog(this, "Cars rented successfully.");
                return;
            } catch (ParseException e) {
                JOptionPane.showMessageDialog(this, "lease enter a valid date in the required format.");

            }
        }
    }//GEN-LAST:event_RentCarButtonActionPerformed

    private void ReturnCarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ReturnCarButtonActionPerformed
        // TODO add your handling code here:

        if (RentedCarTable.getSelectedRowCount() == 0) {
            JOptionPane.showMessageDialog(this, "You have not selected any rows. Please select some rows.");
            return;
        }

        while (true) {
            String rentDate = JOptionPane.showInputDialog(this, "Enter rent date (dd/mm/yy):");

            if (rentDate == null) {
                return;
            }

            SimpleDateFormat format = new SimpleDateFormat("dd/mm/yy");
            try {
                Date d = format.parse(rentDate);
                if (!rentDate.equals(format.format(d))) {
                    throw new ParseException(rentDate, ERROR);

                }
                Calendar cal = format.getCalendar();

                rentedCarTableModel.retunCars(returnedCarTableModel, findCarTableModel, rentDate);
                JOptionPane.showMessageDialog(this, "Cars rented successfully.");
                return;
            } catch (ParseException e) {
                JOptionPane.showMessageDialog(this, "lease enter a valid date in the required format.");

            }
        }
    }//GEN-LAST:event_ReturnCarButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField FindCarSearch;
    private javax.swing.JTable FindCarTable;
    private javax.swing.JButton RentCarButton;
    private javax.swing.JTabbedPane RentalStatusTab;
    private javax.swing.JTable RentedCarTable;
    private javax.swing.JButton ReturnCarButton;
    private javax.swing.JTable ReturnedCarTable;
    private javax.swing.JButton SearchCar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    // End of variables declaration//GEN-END:variables
}
